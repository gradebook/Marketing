.hero {
	position: relative;
	padding-top: 128px;
	padding-bottom: 80px;
	z-index: 0;
}

.hero::before {
	content: '';
	position: absolute;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	background: var(--color--typography-1);
	pointer-events: none;
}

.hero::after {
	content: '';
	position: absolute;
	top: 0;
	left: calc(50% - 320px);
	width: 640px;
	height: 136px;
	background-image: url('/static/images/hero-illustration.svg');
	background-size: 640px 136px;
	background-repeat: no-repeat;
	pointer-events: none;
}

.hero-copy {
	position: relative; /* To display elements above hero illustrations */
}

.hero-copy p {
	margin-bottom: 2.5rem;
}

.hero-cta {
	display: inline-flex;
	align-items: center;
}

.hero-cta svg {
	transition: transform 0.25s ease-in-out;
	height: 3rem;
	width: 1.5rem;
}

.hero-cta:hover svg {
	transform: translateX(0.25rem);
}

.hero-summary {
	font-family: serif;
	font-weight: bold;
	--stomp-start: #d7d6dd;
	--stomp-end: var(--color--secondary-4);
	font-size: clamp(1rem, 10vmin, 4rem);
	line-height: clamp(1rem, 10vmin, 4rem);
	margin-bottom: 2rem;
}

.hero-paragraph {
	max-width: 650px;
	margin-left: auto;
	margin-right: auto;
	font-size: clamp(1rem, 5vmin, 1.25rem);
	line-height: clamp(1rem, 10vmin, 1.4rem);
}

.login-button::after {
	content: '';
	background-image: url('/static/images/arrow-right.svg');
}

/* media::>medium */
@media (min-width: 641px) {
	.hero {
		padding-top: 175px;
		padding-bottom: 115px;
	}

	.hero::after {
		left: calc(50% - 720px);
		width: 1440px;
		height: 307px;
		background-size: 1440px 307px;
	}

	/* .hero-paragraph {
		padding-left: 72px;
		padding-right: 72px;
	} */
}

.has-animations .hero::before,
.has-animations .hero::after,
.has-animations .site-header,
.has-animations .hero-summary,
.has-animations .hero-paragraph,
.has-animations .hero-cta {
	opacity: 0;
}

.has-animations.is-loaded .hero::before {
	animation: heroBg 0.6s cubic-bezier(0.215, 0.61, 0.355, 1) forwards;
}

.has-animations.is-loaded .hero::after {
	animation: heroFadeIn 0.6s ease forwards 0.3s;
}

.has-animations.is-loaded .site-header {
	animation: heroFadeIn 0.6s ease forwards 0.3s;
}

.has-animations.is-loaded .hero-summary {
	animation: heroContent 0.6s cubic-bezier(0.215, 0.61, 0.355, 1) forwards 0.15s;
}

.has-animations.is-loaded .hero-paragraph {
	animation: heroContent 0.6s cubic-bezier(0.215, 0.61, 0.355, 1) forwards 0.3s;
}

.has-animations.is-loaded .hero-cta {
	/* This is not a random number! Check the heroLoginButton animation definition for more info */
	animation: heroLoginButton 4.75s cubic-bezier(0.215, 0.61, 0.355, 1) forwards 0.45s;
}

.has-animations.is-loaded .hero-summary .word {
	animation-name: stompIn;
	animation-duration: 0s;
	animation-fill-mode: forwards;
	animation-delay: calc(0.75s + calc(0.5s * var(--delay)));
}

.uline {
	text-decoration: underline;
}

@keyframes heroBg {
	from {
		transform: translateY(-100%);
		opacity: 0;
	}

	to {
		transform: translateY(0);
		opacity: 1;
	}
}

@keyframes heroContent {
	from {
		transform: translateY(-40px);
		opacity: 0;
	}

	to {
		transform: translateY(0);
		opacity: 1;
	}
}

@keyframes heroLoginButton {
	from {
		transform: translateY(-40px);
		opacity: 0;
	}

	/*
	* We have 4 words which each start after 0.75s -> 3s for those animations.
	* - Add another 0.75s for this delay to get a delay of 3.75s.
	* - We want the appear animation to play for 0.6s (in parallel of the delay)
	* - We want the wiggle animation to play for 1s
	* For a total of 4.75s animation duration
	* The fade in animation should run for the first 0.6/4.75 = 13% of the animation
	* The wiggle should start at 3.75/4.75 = 79%
	*/
	13%, 79% {
		transform: translateY(0);
		opacity: 1;
	}

	85% {
		transform: translateY(-10px);
	}

	to {
		transform: translateY(0);
		opacity: 1;
	}
}

@keyframes heroFadeIn {
	from {
		opacity: 0;
	}

	to {
		opacity: 1;
	}
}

@keyframes stompIn {
	from {
		color: var(--stomp-start);
	}
	to {
		color: var(--stomp-end);
	}
}
